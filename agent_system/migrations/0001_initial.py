# Generated by Django 4.2.7 on 2025-06-24 12:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AgentConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "agent_type",
                    models.CharField(
                        choices=[
                            ("CEO", "CEO Agent"),
                            ("MARKET_RESEARCH", "Market Research Agent"),
                            ("FINANCIAL_ANALYST", "Financial Analyst Agent"),
                            ("TECHNICAL_LEAD", "Technical Lead Agent"),
                            ("RISK_ANALYST", "Risk Analyst Agent"),
                            ("MARKETING_STRATEGIST", "Marketing Strategist Agent"),
                            ("IDEA_GENERATOR", "Idea Generator Agent"),
                        ],
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("version", models.CharField(default="1.0.0", max_length=20)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("maintenance", "Under Maintenance"),
                            ("testing", "Testing"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "model_name",
                    models.CharField(help_text="Specific model to use", max_length=100),
                ),
                (
                    "temperature",
                    models.FloatField(
                        default=0.7,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(2.0),
                        ],
                    ),
                ),
                ("max_tokens", models.IntegerField(default=4000)),
                (
                    "top_p",
                    models.FloatField(
                        default=1.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "frequency_penalty",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(-2.0),
                            django.core.validators.MaxValueValidator(2.0),
                        ],
                    ),
                ),
                (
                    "presence_penalty",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(-2.0),
                            django.core.validators.MaxValueValidator(2.0),
                        ],
                    ),
                ),
                (
                    "capabilities",
                    models.JSONField(
                        default=list, help_text="List of agent capabilities"
                    ),
                ),
                ("required_data_sources", models.JSONField(default=list)),
                (
                    "tags",
                    models.JSONField(default=list, help_text="Tags for categorization"),
                ),
                ("timeout_seconds", models.IntegerField(default=30)),
                ("max_retries", models.IntegerField(default=3)),
                ("retry_delay_seconds", models.IntegerField(default=5)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_agents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["agent_type"],
            },
        ),
        migrations.CreateModel(
            name="LLMProvider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "provider_type",
                    models.CharField(
                        choices=[
                            ("openai", "OpenAI"),
                            ("anthropic", "Anthropic Claude"),
                            ("lm_studio", "LM Studio (Local)"),
                            ("ollama", "Ollama (Local)"),
                            ("huggingface", "Hugging Face"),
                            ("custom", "Custom API"),
                        ],
                        max_length=20,
                    ),
                ),
                ("api_endpoint", models.URLField(help_text="API endpoint URL")),
                (
                    "api_key",
                    models.CharField(
                        blank=True, help_text="API key (if required)", max_length=255
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_local",
                    models.BooleanField(
                        default=False, help_text="Is this a local LLM?"
                    ),
                ),
                ("default_model", models.CharField(blank=True, max_length=100)),
                ("max_tokens", models.IntegerField(default=4000)),
                (
                    "temperature",
                    models.FloatField(
                        default=0.7,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(2.0),
                        ],
                    ),
                ),
                ("timeout_seconds", models.IntegerField(default=30)),
                (
                    "cost_per_1k_tokens",
                    models.DecimalField(decimal_places=6, default=0.0, max_digits=8),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AgentPerformanceMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_executions", models.IntegerField(default=0)),
                ("successful_executions", models.IntegerField(default=0)),
                ("failed_executions", models.IntegerField(default=0)),
                ("average_execution_time", models.FloatField(default=0.0)),
                ("average_token_usage", models.IntegerField(default=0)),
                (
                    "total_cost",
                    models.DecimalField(decimal_places=6, default=0.0, max_digits=10),
                ),
                ("average_confidence_score", models.FloatField(default=0.0)),
                ("average_response_quality", models.FloatField(default=0.0)),
                ("executions_last_24h", models.IntegerField(default=0)),
                ("executions_last_7d", models.IntegerField(default=0)),
                ("executions_last_30d", models.IntegerField(default=0)),
                ("last_execution_at", models.DateTimeField(blank=True, null=True)),
                (
                    "last_successful_execution_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("last_failure_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "agent_config",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_metrics",
                        to="agent_system.agentconfiguration",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AgentExecutionLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("business_idea_id", models.CharField(blank=True, max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "Success"),
                            ("failure", "Failure"),
                            ("timeout", "Timeout"),
                            ("error", "Error"),
                        ],
                        max_length=20,
                    ),
                ),
                ("execution_time_seconds", models.FloatField()),
                ("token_usage", models.IntegerField(default=0)),
                (
                    "estimated_cost",
                    models.DecimalField(decimal_places=6, default=0.0, max_digits=8),
                ),
                ("prompt_used", models.TextField()),
                ("response_content", models.TextField(blank=True)),
                ("structured_data", models.JSONField(default=dict)),
                ("confidence_score", models.FloatField(default=0.0)),
                ("error_message", models.TextField(blank=True)),
                ("error_type", models.CharField(blank=True, max_length=100)),
                ("model_used", models.CharField(max_length=100)),
                ("llm_provider_name", models.CharField(max_length=100)),
                ("execution_timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "agent_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="execution_logs",
                        to="agent_system.agentconfiguration",
                    ),
                ),
            ],
            options={
                "ordering": ["-execution_timestamp"],
            },
        ),
        migrations.CreateModel(
            name="AgentConfigurationPreset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField()),
                (
                    "agent_type",
                    models.CharField(
                        choices=[
                            ("CEO", "CEO Agent"),
                            ("MARKET_RESEARCH", "Market Research Agent"),
                            ("FINANCIAL_ANALYST", "Financial Analyst Agent"),
                            ("TECHNICAL_LEAD", "Technical Lead Agent"),
                            ("RISK_ANALYST", "Risk Analyst Agent"),
                            ("MARKETING_STRATEGIST", "Marketing Strategist Agent"),
                            ("IDEA_GENERATOR", "Idea Generator Agent"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "config_data",
                    models.JSONField(help_text="Complete agent configuration as JSON"),
                ),
                (
                    "prompt_templates",
                    models.JSONField(
                        default=list, help_text="Prompt templates for this preset"
                    ),
                ),
                ("is_default", models.BooleanField(default=False)),
                ("is_public", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["agent_type", "name"],
            },
        ),
        migrations.AddField(
            model_name="agentconfiguration",
            name="llm_provider",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="agent_system.llmprovider",
            ),
        ),
        migrations.AddField(
            model_name="agentconfiguration",
            name="updated_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="updated_agents",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="AgentPromptTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "prompt_type",
                    models.CharField(
                        choices=[
                            ("system", "System Prompt"),
                            ("analysis", "Analysis Prompt"),
                            ("instruction", "Instruction Template"),
                            ("example", "Example Template"),
                        ],
                        max_length=20,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "template",
                    models.TextField(
                        help_text="Prompt template with variable placeholders"
                    ),
                ),
                (
                    "variables",
                    models.JSONField(
                        default=dict,
                        help_text="Available variables and their descriptions",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("version", models.CharField(default="1.0.0", max_length=20)),
                ("notes", models.TextField(blank=True)),
                ("usage_count", models.IntegerField(default=0)),
                ("average_response_time", models.FloatField(default=0.0)),
                ("average_token_usage", models.IntegerField(default=0)),
                ("success_rate", models.FloatField(default=100.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "agent_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prompt_templates",
                        to="agent_system.agentconfiguration",
                    ),
                ),
            ],
            options={
                "ordering": ["agent_config", "prompt_type", "name"],
                "unique_together": {("agent_config", "prompt_type", "name")},
            },
        ),
    ]
