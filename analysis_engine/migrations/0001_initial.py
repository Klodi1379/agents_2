# Generated by Django 4.2.7 on 2025-06-24 11:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BusinessIdea",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "industry",
                    models.CharField(
                        choices=[
                            ("TECH", "Technology"),
                            ("HEALTHCARE", "Healthcare"),
                            ("FINANCE", "Finance"),
                            ("EDUCATION", "Education"),
                            ("RETAIL", "Retail"),
                            ("MANUFACTURING", "Manufacturing"),
                            ("SERVICES", "Services"),
                            ("OTHER", "Other"),
                        ],
                        default="OTHER",
                        max_length=20,
                    ),
                ),
                ("target_market", models.CharField(blank=True, max_length=255)),
                (
                    "estimated_budget",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending Analysis"),
                            ("QUEUE", "In Queue"),
                            ("ANALYZING", "Being Analyzed"),
                            ("COMPLETED", "Analysis Complete"),
                            ("FAILED", "Analysis Failed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                (
                    "overall_score",
                    models.IntegerField(
                        blank=True, help_text="Overall viability score 1-100", null=True
                    ),
                ),
                ("recommendation", models.CharField(blank=True, max_length=50)),
                ("confidence_level", models.CharField(blank=True, max_length=20)),
                (
                    "submitted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-submitted_at"],
            },
        ),
        migrations.CreateModel(
            name="IdeaGenerationRequest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "industry_focus",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("TECH", "Technology"),
                            ("HEALTHCARE", "Healthcare"),
                            ("FINANCE", "Finance"),
                            ("EDUCATION", "Education"),
                            ("RETAIL", "Retail"),
                            ("MANUFACTURING", "Manufacturing"),
                            ("SERVICES", "Services"),
                            ("OTHER", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("budget_range", models.CharField(blank=True, max_length=50)),
                ("target_audience", models.CharField(blank=True, max_length=255)),
                (
                    "innovation_level",
                    models.CharField(
                        choices=[
                            ("LOW", "Incremental Innovation"),
                            ("MEDIUM", "Moderate Innovation"),
                            ("HIGH", "Disruptive Innovation"),
                        ],
                        default="MEDIUM",
                        max_length=20,
                    ),
                ),
                ("geographic_focus", models.CharField(blank=True, max_length=100)),
                ("technology_preferences", models.TextField(blank=True)),
                ("avoid_sectors", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("GENERATING", "Generating Ideas"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("generated_ideas", models.JSONField(default=list)),
                ("ideas_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "requested_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FinalAnalysisReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("executive_summary", models.TextField()),
                ("key_findings", models.JSONField(default=list)),
                ("recommendations", models.JSONField(default=list)),
                ("market_analysis", models.TextField(blank=True)),
                ("financial_projections", models.JSONField(default=dict)),
                ("risk_assessment", models.TextField(blank=True)),
                ("technical_feasibility", models.TextField(blank=True)),
                ("market_score", models.IntegerField(blank=True, null=True)),
                ("financial_score", models.IntegerField(blank=True, null=True)),
                ("technical_score", models.IntegerField(blank=True, null=True)),
                ("risk_score", models.IntegerField(blank=True, null=True)),
                ("overall_score", models.IntegerField(blank=True, null=True)),
                (
                    "final_recommendation",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PROCEED", "Proceed with Implementation"),
                            ("PROCEED_CAUTION", "Proceed with Caution"),
                            ("MODIFY", "Modify and Re-evaluate"),
                            ("DELAY", "Delay Implementation"),
                            ("REJECT", "Do Not Proceed"),
                        ],
                        max_length=20,
                    ),
                ),
                ("confidence_level", models.CharField(blank=True, max_length=20)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("generated_by_agent", models.CharField(default="CEO", max_length=50)),
                (
                    "total_cost",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=10, null=True
                    ),
                ),
                (
                    "business_idea",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="final_report",
                        to="analysis_engine.businessidea",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AnalysisTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("task_id", models.CharField(max_length=255, unique=True)),
                (
                    "agent_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("CEO", "Chief Executive Officer"),
                            ("MARKET_RESEARCH", "Market Research Analyst"),
                            ("FINANCIAL", "Financial Analyst"),
                            ("MARKETING", "Marketing Strategist"),
                            ("TECH_LEAD", "Technical Lead"),
                            ("RISK_ANALYST", "Risk Analyst"),
                            ("LEGAL", "Legal Advisor"),
                            ("HR", "Human Resources"),
                            ("OPERATIONS", "Operations Manager"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("STARTED", "Started"),
                            ("SUCCESS", "Success"),
                            ("FAILURE", "Failure"),
                            ("RETRY", "Retry"),
                            ("REVOKED", "Revoked"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("result", models.TextField(blank=True)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "business_idea",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analysis_tasks",
                        to="analysis_engine.businessidea",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AgentReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "agent_type",
                    models.CharField(
                        choices=[
                            ("CEO", "Chief Executive Officer"),
                            ("MARKET_RESEARCH", "Market Research Analyst"),
                            ("FINANCIAL", "Financial Analyst"),
                            ("MARKETING", "Marketing Strategist"),
                            ("TECH_LEAD", "Technical Lead"),
                            ("RISK_ANALYST", "Risk Analyst"),
                            ("LEGAL", "Legal Advisor"),
                            ("HR", "Human Resources"),
                            ("OPERATIONS", "Operations Manager"),
                        ],
                        max_length=20,
                    ),
                ),
                ("report_content", models.TextField()),
                ("structured_data", models.JSONField(blank=True, default=dict)),
                (
                    "agent_score",
                    models.IntegerField(
                        blank=True,
                        help_text="Agent's individual score 1-100",
                        null=True,
                    ),
                ),
                (
                    "confidence",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("execution_time", models.DurationField(blank=True, null=True)),
                ("llm_model_used", models.CharField(blank=True, max_length=50)),
                ("token_usage", models.IntegerField(blank=True, null=True)),
                (
                    "cost_estimate",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=8, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                            ("RETRYING", "Retrying"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                (
                    "business_idea",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agent_reports",
                        to="analysis_engine.businessidea",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="businessidea",
            index=models.Index(fields=["status"], name="analysis_en_status_9d0494_idx"),
        ),
        migrations.AddIndex(
            model_name="businessidea",
            index=models.Index(
                fields=["industry"], name="analysis_en_industr_fc4444_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="businessidea",
            index=models.Index(
                fields=["overall_score"], name="analysis_en_overall_eb91f7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="analysistask",
            index=models.Index(
                fields=["task_id"], name="analysis_en_task_id_1fe072_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="analysistask",
            index=models.Index(fields=["status"], name="analysis_en_status_5bc7db_idx"),
        ),
        migrations.AddIndex(
            model_name="agentreport",
            index=models.Index(
                fields=["agent_type", "status"], name="analysis_en_agent_t_6f164c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="agentreport",
            index=models.Index(
                fields=["business_idea", "status"],
                name="analysis_en_busines_f80d35_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="agentreport",
            unique_together={("business_idea", "agent_type")},
        ),
    ]
